imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: '@AppBundle/Resources/config/services.yml' }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: ru

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.root_dir%/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id: ~
    fragments: ~
    http_method_override: true
    assets:
        version:  "1.0"

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    exception_controller:  AppBundle:Exception:show404
    form_themes:
        - '@SonataFormatter/Form/formatter.html.twig'
        - '@SonataMedia/Form/media_widgets.html.twig'
    paths:
            "%kernel.root_dir%": app

sonata_formatter:
    default_formatter: text
    formatters:
        markdown:
            service: sonata.formatter.text.markdown
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig #keep this commented unless you are using media bundle.
        text:
            service: sonata.formatter.text.text
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig
        rawhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig
        richhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig
        twig:
            service: sonata.formatter.text.twigengine
            extensions: [] # Twig formatter cannot have extensions

fos_ck_editor:
    default_config: my_config
    configs:
        my_config:

sonata_admin:
    assets:
        extra_javascripts:
            # ...
            - bundles/ivoryckeditor/ckeditor.js
            - bundles/sonataformatter/vendor/markitup-markitup/markitup/jquery.markitup.js
            - bundles/sonataformatter/markitup/sets/markdown/set.js
            - bundles/sonataformatter/markitup/sets/html/set.js
            - bundles/sonataformatter/markitup/sets/textile/set.js

        extra_stylesheets:
            # ...
            - bundles/sonataformatter/markitup/skins/sonata/style.css
            - bundles/sonataformatter/markitup/sets/markdown/style.css
            - bundles/sonataformatter/markitup/sets/html/style.css
            - bundles/sonataformatter/markitup/sets/textile/style.css
    dashboard:
        blocks:
            - { position: right, type: l4w.info.block }
            - { position: right, type: last.goods.stat.block }
            - { position: left, type: sonata.admin.block.admin_list }
    title: 'Панель управления'
    title_logo: bundles/app/images/logo_L4W.svg

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.root_dir%/data/data.db3'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        entity_managers:
            default:
                mappings:
                    ApplicationSonataUserBundle: ~
                    SonataUserBundle: ~
                    FOSUserBundle: ~
                    AppBundle: ~
                    ApplicationSonataMediaBundle: ~
                    SonataMediaBundle: ~
                dql:
                    string_functions:
                        regexp: DoctrineExtensions\Query\Mysql\Regexp

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

sonata_block:
    default_contexts: [cms]
    blocks:
        # enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts: [admin]
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        l4w.info.block:
        last.goods.stat.block:

sonata_user:
    security_acl: true
    manager_type: orm # can be orm or mongodb
    class:            # Entity Classes
        user:               Application\Sonata\UserBundle\Entity\User
        group:              Application\Sonata\UserBundle\Entity\Group

fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User

    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager

    service:
        user_manager: sonata.user.orm.user_manager

    from_email:
        address: "rr@rr.rr"
        sender_name: "%mailer_user%"

sphinxsearch:
    searchd:
        host: '%sphinx_host%'
        port: '%sphinx_port%'
    indexes:
        Goods: "AppBundle:Goods"

assetic:
    debug:          '%kernel.debug%'
    use_controller: false
    filters:
        cssrewrite: ~
    assets:
            bootstrap_js:
                inputs:
                    - %kernel.root_dir%/../vendor/twitter/bootstrap/dist/js/bootstrap.js
            bootstrap_css:
                inputs:
                    - %kernel.root_dir%/../vendor/twitter/bootstrap/dist/css/bootstrap.css
                    - %kernel.root_dir%/../vendor/twitter/bootstrap/dist/css/bootstrap-theme.css
                filters: [cssrewrite]

            bootstrap_glyphicons_ttf:
                inputs:
                    - %kernel.root_dir%/../vendor/twitter/bootstrap/dist/fonts/glyphicons-halflings-regular.ttf
                output: "fonts/glyphicons-halflings-regular.ttf"
            bootstrap_glyphicons_eot:
                inputs:
                    - %kernel.root_dir%/../vendor/twitter/bootstrap/dist/fonts/glyphicons-halflings-regular.eot
                output: "fonts/glyphicons-halflings-regular.eot"
            bootstrap_glyphicons_svg:
                inputs:
                    - %kernel.root_dir%/../vendor/twitter/bootstrap/dist/fonts/glyphicons-halflings-regular.svg
                output: "fonts/glyphicons-halflings-regular.svg"
            bootstrap_glyphicons_woff:
                inputs:
                    - %kernel.root_dir%/../vendor/twitter/bootstrap/dist/fonts/glyphicons-halflings-regular.woff
                output: "fonts/glyphicons-halflings-regular.woff"

            jquery:
                inputs:
                    - %kernel.root_dir%/../vendor/components/jquery/jquery.js

liip_imagine :
    data_loader: loader.remote
    resolvers:
        default:
            web_path:
                web_root: "%kernel.root_dir%/../web"
                cache_prefix: "media/cache"
    loaders:
        default:
            filesystem:
                data_root: "%kernel.root_dir%/../web"
    filter_sets:
        cache: ~
        my_thumb :
            quality : 75
            filters :
                thumbnail  : { size : [280, ], mode : outbound }
        main_thumb :
            quality : 75
            filters :
                thumbnail  : { size : [750, ], mode : outbound }
#                background : { size : [124, 94], position : center, color : '#000000' }

jantao_dev_sitemap:
    hosts:
    - look4wear.ru
    gzip: true
    scheme: https_only
    robots:
        allow:
            "/": ~
        disallow:
            "/search/": ~
            "/goods/buy/": ~
        crawl_delay: 5
    sitemap:

sonata_media:
    class:
        media: Application\Sonata\MediaBundle\Entity\Media
        gallery: Application\Sonata\MediaBundle\Entity\Gallery
        gallery_has_media: Application\Sonata\MediaBundle\Entity\GalleryHasMedia
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr it is mandatory to choose one here
    default_context: default # you need to set a context
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}

    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  "%kernel.root_dir%/../web/uploads/media" #flex
            #directory:  "%kernel.root_dir%/../web/uploads/media" #non-flex
            create:     false

    providers:
        image:
            resizer: sonata.media.resizer.square