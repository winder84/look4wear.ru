# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value
    router.request_context.host: look4wear.ru

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        arguments:
            - "@doctrine.orm.entity_manager"
        tags: ['controller.service_arguments']
    app.imagine.cdn_data_loader:
        class: "%liip_imagine.binary.loader.stream.class%"
        arguments:
            - '' # if you store full path in the database
        tags:
            - { name: 'liip_imagine.binary.loader', loader: 'cdn_data_loader' }
    fashion.loader.remote:
        class: AppBundle\External\RemoteLoader
        tags:
            - { name: liip_imagine.binary.loader, loader: loader.remote }
    app.exception_controller:
        class: AppBundle\Controller\ExceptionController
        arguments: ['@twig', '%kernel.debug%']